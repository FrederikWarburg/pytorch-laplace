Search.setIndex({"docnames": ["apis/generated/pytorch_laplace.log_det_ratio", "apis/generated/pytorch_laplace.log_marginal_likelihood", "apis/generated/pytorch_laplace.optimize_prior_precision", "apis/generated/pytorch_laplace.scatter", "apis/hessian", "apis/laplace", "apis/optimization", "index", "laplace/index"], "filenames": ["apis/generated/pytorch_laplace.log_det_ratio.rst", "apis/generated/pytorch_laplace.log_marginal_likelihood.rst", "apis/generated/pytorch_laplace.optimize_prior_precision.rst", "apis/generated/pytorch_laplace.scatter.rst", "apis/hessian.rst", "apis/laplace.rst", "apis/optimization.rst", "index.rst", "laplace/index.rst"], "titles": ["pytorch_laplace.log_det_ratio", "pytorch_laplace.log_marginal_likelihood", "pytorch_laplace.optimize_prior_precision", "pytorch_laplace.scatter", "Hessian Estimators", "Laplace Samplers", "Optimization", "Pytorch-laplace Documentation", "Introduction"], "terms": {"hessian": [0, 1, 2, 5, 7], "prior_prec": [0, 1, 2, 5], "mu_q": [1, 2, 3], "n_step": 2, "100": [2, 5, 7], "prior_precision_diag": 3, "class": [4, 5], "pytorch_laplac": [4, 5, 7], "msehessiancalcul": [4, 7], "kwarg": 4, "mean": [1, 2, 3, 4], "squar": 4, "error": 4, "cehessiancalcul": 4, "multi": 4, "cross": 4, "entropi": 4, "bcehessiancalcul": 4, "binari": 4, "contrastivehessiancalcul": 4, "contrast": 4, "loss": [0, 1, 2, 4, 5], "l": 4, "x": 4, "y": 4, "0": [1, 4], "5": [1, 4], "tupl": 4, "sum_posit": [], "sum_neg": [], "notic": [], "valu": 4, "i": [4, 7, 8], "same": 4, "self": [], "method": [4, 8], "full": [4, 5], "fix": 4, "diaglaplac": [5, 7], "blocklaplac": 5, "below": 6, "ar": [4, 6], "basic": 6, "function": [0, 1, 2, 5, 6], "support": [4, 6, 7], "sampl": [4, 5, 6, 7], "render": 6, "estim": 7, "sampler": 7, "util": 7, "paramet": [0, 1, 2, 3, 4, 5], "tensor": [0, 1, 2, 3, 4, 5], "int": [2, 5], "compute_gradi": 4, "target": 4, "nnj_modul": 4, "tuple_indic": 4, "none": 4, "comput": [0, 1, 3, 4, 5, 7], "gradient": 4, "network": [4, 5, 8], "sequenti": [4, 5, 7], "option": [4, 5], "return": [4, 5], "type": [4, 5], "compute_hessian": 4, "gener": 4, "gauss": 4, "newton": 4, "approxim": [4, 5], "j": 4, "t": [3, 4], "h": 4, "compute_loss": 4, "provid": 7, "simpl": [7, 8], "With": 7, "minim": 7, "code": 7, "chang": 7, "you": 7, "can": 7, "us": [5, 7, 8], "posterior": [0, 1, 2, 3, 5, 7, 8], "ani": 7, "model": [5, 7], "It": [7, 8], "both": 7, "linear": 7, "focus": 7, "diagon": [3, 5, 7], "also": 7, "low": [5, 7], "rank": [5, 7], "kronick": 7, "factor": 7, "github": 7, "http": 7, "com": 7, "frederikwarburg": 7, "author": 7, "frederik": 7, "warburg": 7, "marco": 7, "miani": 7, "depend": 7, "pleas": 7, "first": 7, "The": [0, 1, 2, 3, 4, 5, 7, 8], "easiest": 7, "wai": 7, "from": [5, 7], "pypi": 7, "bash": [], "pip": 7, "Or": 7, "sourc": 7, "git": 7, "clone": 7, "cd": 7, "e": 7, "import": 7, "torch": 7, "nn": 7, "nnj": 7, "diag": 7, "optim": [2, 7], "prior_precis": 7, "optimize_prior_precis": 7, "defin": 7, "network_nn": 7, "tanh": 7, "convert": 7, "network_nnj": 7, "convert_to_nnj": 7, "fit": 7, "fit_hessian": 7, "train_load": 7, "devic": [5, 7], "pred_mu": 7, "pred_sigma": 7, "sample_laplac": 7, "test_load": 7, "n_sampl": [5, 7], "arg": 4, "jacobian": 4, "sandwich": 4, "ident": 4, "each": 4, "element": 4, "batch": [4, 5], "matrix": [3, 4, 5], "interpret": 4, "jtmjp": 4, "reshap": 4, "save_memori": 4, "fals": 4, "bool": 4, "liter": 4, "po": 4, "l_": 4, "con": 4, "2": 4, "la": 7, "backend": 7, "which": 7, "an": 7, "order": [4, 7], "magnitud": 7, "faster": 7, "memori": 7, "effici": 7, "than": 7, "altern": 7, "repo": 7, "focu": [], "obtain": [], "uncertainti": 8, "neural": [4, 5, 8], "predict": 4, "base": 8, "second": 4, "taylor": [], "expans": [], "log": [0, 1], "likelihood": 1, "around": [], "maximum": [], "mle": [], "result": [], "gaussian": 8, "equal": [], "covari": [], "invers": [], "deriv": 4, "respect": [], "expens": [], "ggn": 4, "backpropag": [], "check": 7, "out": 7, "thi": [4, 8], "toctre": [], "hidden": [], "caption": [], "index": [], "rst": [], "doc": [], "ref": [], "introduct": 7, "_": [], "In": 8, "we": 8, "seek": 7, "how": [7, 8], "our": 7, "educ": 7, "content": 7, "g": 7, "start": 7, "read": 7, "laplacet": [], "mckai": 8, "1992": 8, "quantifi": 8, "assumpt": 8, "distribut": [0, 1, 2, 3, 5, 8], "weight": 8, "fast": 8, "document": 8, "go": [], "explain": 8, "context": 8, "bayesian": 8, "posterior_scal": 5, "param": [], "scale": 5, "number": [2, 5], "draw": 5, "1": 5, "sqrt": 5, "float": 5, "precis": [0, 1, 2, 3, 5], "prior": [0, 1, 2, 3, 5], "init_hessian": 5, "data_s": 5, "net": 5, "initi": 5, "size": 5, "dataset": 5, "str": 5, "h_": [], "batch_siz": 5, "average_hessian_sampl": 5, "constant": 5, "averag": 5, "over": 5, "multipli": 5, "onli": 4, "valid": [], "shape": 4, "input": 4, "n": 4, "where": 4, "addit": [], "dimens": [], "output": 4, "examp": [], "diag_laplac": [], "rand": [], "10": [], "ext": [], "rac": [], "hessian_batch": 5, "_scale": 5, "epsilon": 5, "_prec": 5, "aveage_hessian_sampl": 5, "howev": 4, "vari": 4, "embed": 4, "anchor": 4, "posit": 4, "neg": 4, "imag": 4, "modul": 4, "indic": 4, "either": 4, "p": 4, "sum_": 4, "mse": [], "determin": 0, "ratio": 0, "matric": 0, "margin": 1, "_marglik": 1, "_det": 1, "_ratio": 1, "scatter": 1, "step": 2, "mu": 3, "_q": 3, "_precis": 3, "current": 4, "one": 4, "point": 4, "now": 4, "exampl": 4, "classifi": 4, "mnist": 4, "digit": 4, "work": 4, "pixelwis": 4, "classif": 4, "segment": 4, "logit": 4, "befor": 4}, "objects": {"pytorch_laplace": [[4, 0, 1, "", "BCEHessianCalculator"], [5, 0, 1, "", "BlockLaplace"], [4, 0, 1, "", "CEHessianCalculator"], [4, 0, 1, "", "ContrastiveHessianCalculator"], [5, 0, 1, "", "DiagLaplace"], [4, 0, 1, "", "MSEHessianCalculator"], [0, 2, 1, "", "log_det_ratio"], [1, 2, 1, "", "log_marginal_likelihood"], [2, 2, 1, "", "optimize_prior_precision"], [3, 2, 1, "", "scatter"]], "pytorch_laplace.BCEHessianCalculator": [[4, 1, 1, "", "compute_gradient"], [4, 1, 1, "", "compute_hessian"], [4, 1, 1, "", "compute_loss"]], "pytorch_laplace.BlockLaplace": [[5, 1, 1, "", "aveage_hessian_samples"], [5, 1, 1, "", "init_hessian"], [5, 1, 1, "", "posterior_scale"], [5, 1, 1, "", "sample"], [5, 1, 1, "", "scale"]], "pytorch_laplace.CEHessianCalculator": [[4, 1, 1, "", "compute_gradient"], [4, 1, 1, "", "compute_hessian"], [4, 1, 1, "", "compute_loss"]], "pytorch_laplace.ContrastiveHessianCalculator": [[4, 1, 1, "", "compute_gradient"], [4, 1, 1, "", "compute_hessian"], [4, 1, 1, "", "compute_loss"]], "pytorch_laplace.DiagLaplace": [[5, 1, 1, "", "average_hessian_samples"], [5, 1, 1, "", "init_hessian"], [5, 1, 1, "", "posterior_scale"], [5, 1, 1, "", "sample"], [5, 1, 1, "", "scale"]], "pytorch_laplace.MSEHessianCalculator": [[4, 1, 1, "", "compute_gradient"], [4, 1, 1, "", "compute_hessian"], [4, 1, 1, "", "compute_loss"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"pytorch_laplac": [0, 1, 2, 3], "log_det_ratio": 0, "log_marginal_likelihood": 1, "optimize_prior_precis": 2, "scatter": 3, "hessian": [4, 8], "estim": 4, "laplac": [5, 7, 8], "sampler": 5, "util": [], "pytorch": 7, "document": 7, "link": 7, "python": 7, "api": 7, "instal": 7, "usag": 7, "learn": 7, "more": 7, "about": 7, "approxim": [7, 8], "introduct": 8, "optim": 6, "what": [], "want": 7, "intuit": 8, "deriv": 8, "sampl": 8, "linear": 8, "get": 8, "start": 8}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Optimization": [[6, "optimization"]], "Pytorch-laplace Documentation": [[7, "pytorch-laplace-documentation"]], "Installation": [[7, "installation"]], "Want to learn more about the Laplace approximation?": [[7, "want-to-learn-more-about-the-laplace-approximation"]], "Usage": [[7, "usage"]], "Links:": [[7, "links"]], "Python API": [[7, null]], "Introduction": [[8, "introduction"]], "Intuition": [[8, "intuition"]], "Derivations": [[8, "derivations"]], "Hessian approximations": [[8, "hessian-approximations"]], "Sampling (Laplace)": [[8, "sampling-laplace"]], "Sampling (Linearized Laplace)": [[8, "sampling-linearized-laplace"]], "Getting Started": [[8, "getting-started"]], "Laplace Samplers": [[5, "laplace-samplers"]], "pytorch_laplace.log_det_ratio": [[0, "pytorch-laplace-log-det-ratio"]], "pytorch_laplace.log_marginal_likelihood": [[1, "pytorch-laplace-log-marginal-likelihood"]], "pytorch_laplace.optimize_prior_precision": [[2, "pytorch-laplace-optimize-prior-precision"]], "pytorch_laplace.scatter": [[3, "pytorch-laplace-scatter"]], "Hessian Estimators": [[4, "hessian-estimators"]]}, "indexentries": {"log_det_ratio() (in module pytorch_laplace)": [[0, "pytorch_laplace.log_det_ratio"]], "log_marginal_likelihood() (in module pytorch_laplace)": [[1, "pytorch_laplace.log_marginal_likelihood"]], "optimize_prior_precision() (in module pytorch_laplace)": [[2, "pytorch_laplace.optimize_prior_precision"]], "scatter() (in module pytorch_laplace)": [[3, "pytorch_laplace.scatter"]], "bcehessiancalculator (class in pytorch_laplace)": [[4, "pytorch_laplace.BCEHessianCalculator"]], "cehessiancalculator (class in pytorch_laplace)": [[4, "pytorch_laplace.CEHessianCalculator"]], "contrastivehessiancalculator (class in pytorch_laplace)": [[4, "pytorch_laplace.ContrastiveHessianCalculator"]], "msehessiancalculator (class in pytorch_laplace)": [[4, "pytorch_laplace.MSEHessianCalculator"]], "compute_gradient() (pytorch_laplace.bcehessiancalculator method)": [[4, "pytorch_laplace.BCEHessianCalculator.compute_gradient"]], "compute_gradient() (pytorch_laplace.cehessiancalculator method)": [[4, "pytorch_laplace.CEHessianCalculator.compute_gradient"]], "compute_gradient() (pytorch_laplace.contrastivehessiancalculator method)": [[4, "pytorch_laplace.ContrastiveHessianCalculator.compute_gradient"]], "compute_gradient() (pytorch_laplace.msehessiancalculator method)": [[4, "pytorch_laplace.MSEHessianCalculator.compute_gradient"]], "compute_hessian() (pytorch_laplace.bcehessiancalculator method)": [[4, "pytorch_laplace.BCEHessianCalculator.compute_hessian"]], "compute_hessian() (pytorch_laplace.cehessiancalculator method)": [[4, "pytorch_laplace.CEHessianCalculator.compute_hessian"]], "compute_hessian() (pytorch_laplace.contrastivehessiancalculator method)": [[4, "pytorch_laplace.ContrastiveHessianCalculator.compute_hessian"]], "compute_hessian() (pytorch_laplace.msehessiancalculator method)": [[4, "pytorch_laplace.MSEHessianCalculator.compute_hessian"]], "compute_loss() (pytorch_laplace.bcehessiancalculator method)": [[4, "pytorch_laplace.BCEHessianCalculator.compute_loss"]], "compute_loss() (pytorch_laplace.cehessiancalculator method)": [[4, "pytorch_laplace.CEHessianCalculator.compute_loss"]], "compute_loss() (pytorch_laplace.contrastivehessiancalculator method)": [[4, "pytorch_laplace.ContrastiveHessianCalculator.compute_loss"]], "compute_loss() (pytorch_laplace.msehessiancalculator method)": [[4, "pytorch_laplace.MSEHessianCalculator.compute_loss"]]}})