Search.setIndex({"docnames": ["apis/generated/pytorch_laplace.log_det_ratio", "apis/generated/pytorch_laplace.log_marginal_likelihood", "apis/generated/pytorch_laplace.optimize_prior_precision", "apis/generated/pytorch_laplace.scatter", "apis/hessian", "apis/laplace", "apis/optimization", "index", "laplace/index"], "filenames": ["apis/generated/pytorch_laplace.log_det_ratio.rst", "apis/generated/pytorch_laplace.log_marginal_likelihood.rst", "apis/generated/pytorch_laplace.optimize_prior_precision.rst", "apis/generated/pytorch_laplace.scatter.rst", "apis/hessian.rst", "apis/laplace.rst", "apis/optimization.rst", "index.rst", "laplace/index.rst"], "titles": ["pytorch_laplace.log_det_ratio", "pytorch_laplace.log_marginal_likelihood", "pytorch_laplace.optimize_prior_precision", "pytorch_laplace.scatter", "Hessian Estimators", "Laplace Samplers", "Optimization", "Pytorch-laplace Documentation", "Introduction"], "terms": {"hessian": [0, 1, 2, 5, 7], "prior_prec": [0, 1, 2, 5], "mu_q": [1, 2, 3], "n_step": 2, "100": [2, 5, 7, 8], "prior_precision_diag": 3, "class": [4, 5, 7, 8], "pytorch_laplac": [4, 5, 7], "msehessiancalcul": [4, 7, 8], "kwarg": 4, "mean": [1, 2, 3, 4, 5, 8], "squar": 4, "error": 4, "cehessiancalcul": 4, "multi": 4, "cross": [4, 8], "entropi": [4, 8], "bcehessiancalcul": 4, "binari": 4, "contrastivehessiancalcul": 4, "contrast": 4, "loss": [0, 1, 2, 4, 5, 7, 8], "l": [4, 8], "x": [4, 5, 7, 8], "y": [4, 7, 8], "0": [1, 4, 7, 8], "5": [1, 4], "tupl": [4, 5], "sum_posit": [], "sum_neg": [], "notic": [], "valu": [4, 8], "i": [4, 7, 8], "same": 4, "self": [], "method": [4, 8], "full": [4, 5], "fix": 4, "diaglaplac": [5, 7, 8], "blocklaplac": 5, "below": 6, "ar": [6, 7, 8], "basic": 6, "function": [0, 1, 2, 5, 6, 8], "support": [4, 6, 7, 8], "sampl": [5, 6], "render": 6, "estim": [7, 8], "sampler": [7, 8], "util": [7, 8], "paramet": [0, 1, 2, 3, 4, 5, 7, 8], "tensor": [0, 1, 2, 3, 5], "int": [2, 5, 8], "compute_gradi": [], "target": [], "nnj_modul": [], "tuple_indic": [], "none": [], "comput": [0, 1, 3, 5, 7, 8], "gradient": 8, "network": [5, 7, 8], "sequenti": [5, 7, 8], "option": 5, "return": 5, "type": 5, "compute_hessian": [7, 8], "gener": 8, "gauss": 8, "newton": 8, "approxim": 5, "j": [], "t": [3, 8], "h": [], "compute_loss": [], "provid": [7, 8], "simpl": [7, 8], "With": 7, "minim": 7, "code": [7, 8], "chang": [7, 8], "you": [7, 8], "can": [7, 8], "us": [5, 7, 8], "posterior": [0, 1, 2, 3, 5, 7, 8], "ani": 7, "model": [5, 7, 8], "It": [7, 8], "both": 7, "linear": [5, 7], "focus": [7, 8], "diagon": [3, 5, 7, 8], "also": [7, 8], "low": [5, 7], "rank": [5, 7], "kronick": 7, "factor": 7, "github": 7, "http": 7, "com": 7, "frederikwarburg": 7, "author": 7, "frederik": 7, "warburg": 7, "marco": 7, "miani": 7, "depend": 7, "pleas": [7, 8], "first": [7, 8], "The": [0, 1, 2, 3, 4, 5, 7, 8], "easiest": 7, "wai": 7, "from": [5, 7, 8], "pypi": 7, "bash": [], "pip": 7, "Or": 7, "sourc": 7, "git": 7, "clone": 7, "cd": 7, "e": 7, "import": 7, "torch": [7, 8], "nn": 7, "nnj": [5, 7, 8], "diag": [7, 8], "optim": [2, 7], "prior_precis": [7, 8], "optimize_prior_precis": 7, "defin": [7, 8], "network_nn": 7, "tanh": 7, "convert": [7, 8], "network_nnj": 7, "convert_to_nnj": [7, 8], "fit": [], "fit_hessian": [], "train_load": [7, 8], "devic": 5, "pred_mu": [7, 8], "pred_sigma": [7, 8], "sample_laplac": [], "test_load": [7, 8], "n_sampl": 5, "arg": 4, "jacobian": 8, "sandwich": [], "ident": [], "each": [], "element": [], "batch": 5, "matrix": [3, 5, 8], "interpret": 8, "jtmjp": [], "reshap": [], "save_memori": [], "fals": [], "bool": [], "liter": 4, "po": 4, "l_": [], "con": 8, "2": 8, "la": [7, 8], "backend": [5, 7, 8], "which": [7, 8], "an": [7, 8], "order": [4, 7, 8], "magnitud": [7, 8], "faster": [7, 8], "memori": [7, 8], "effici": [7, 8], "than": [7, 8], "altern": [7, 8], "repo": [7, 8], "focu": [], "obtain": 8, "uncertainti": 8, "neural": [5, 8], "predict": [4, 7, 8], "base": [], "second": [4, 8], "taylor": 8, "expans": 8, "log": [0, 1, 8], "likelihood": [1, 8], "around": 8, "maximum": 8, "mle": [], "result": [], "gaussian": 8, "equal": [], "covari": [], "invers": 8, "deriv": 4, "respect": 8, "expens": 8, "ggn": [7, 8], "backpropag": [], "check": 7, "out": 7, "thi": [5, 7, 8], "toctre": [], "hidden": [], "caption": [], "index": [], "rst": [], "doc": [], "ref": [], "introduct": 7, "_": 8, "In": 8, "we": 8, "seek": 7, "how": [7, 8], "our": 7, "educ": 7, "content": 7, "g": 7, "start": 7, "read": 7, "laplacet": [], "mckai": 8, "1992": 8, "quantifi": 8, "assumpt": 8, "distribut": [0, 1, 2, 3, 5, 7, 8], "weight": 8, "fast": [], "document": 8, "go": [], "explain": 8, "context": 8, "bayesian": 8, "posterior_scal": 5, "param": [], "scale": [5, 7, 8], "number": [2, 5, 8], "draw": 5, "1": [5, 7, 8], "sqrt": 5, "float": 5, "precis": [0, 1, 2, 3, 5], "prior": [0, 1, 2, 3, 5, 8], "init_hessian": 5, "data_s": 5, "net": 5, "initi": [5, 7, 8], "size": 5, "dataset": 5, "str": 5, "h_": [], "batch_siz": 5, "average_hessian_sampl": 5, "constant": 5, "averag": 5, "over": [5, 8], "multipli": 5, "onli": 4, "valid": [], "shape": [], "input": [5, 8], "n": 8, "where": 8, "addit": [], "dimens": [7, 8], "output": [7, 8], "examp": [], "diag_laplac": [], "rand": [], "10": [], "ext": [], "rac": [], "hessian_batch": 5, "_scale": 5, "epsilon": 5, "_prec": 5, "aveage_hessian_sampl": [], "howev": 4, "vari": 4, "embed": [], "anchor": [], "posit": [4, 8], "neg": [4, 8], "imag": 8, "modul": [], "indic": [], "either": [], "p": 8, "sum_": [4, 8], "mse": [7, 8], "determin": [0, 8], "ratio": 0, "matric": 0, "margin": 1, "_marglik": 1, "_det": 1, "_ratio": 1, "scatter": 1, "step": 2, "mu": [3, 5], "_q": 3, "_precis": 3, "current": 4, "one": 4, "point": 4, "now": 4, "exampl": [4, 8], "classifi": 4, "mnist": [4, 8], "digit": 4, "work": 4, "pixelwis": 4, "classif": [4, 8], "segment": [4, 8], "logit": [], "befor": [], "figur": 8, "abov": 8, "show": 8, "two": 8, "after": 8, "train": [7, 8], "have": 8, "converg": 8, "local": 8, "minimum": 8, "illustr": 8, "blue": 8, "star": 8, "theta": 8, "If": 8, "steep": 8, "vallei": 8, "littl": 8, "bit": 8, "increas": 8, "lot": 8, "fairli": 8, "certain": 8, "about": 8, "specif": 8, "On": 8, "other": 8, "hand": 8, "paramt": 8, "flat": 8, "thu": 8, "uncertain": 8, "call": 8, "follow": 8, "correspond": 8, "assum": [7, 8], "appli": 8, "everi": 8, "math": 8, "mathcal": 8, "unnorm": 8, "perform": 8, "chosen": 8, "vector": 8, "begin": 8, "align": 8, "approx": [7, 8], "left": 8, "right": 8, "top": 8, "nabla": 8, "frac": 8, "end": 8, "impos": 8, "polynomi": 8, "equival": 8, "posteriori": 8, "map": 8, "vanish": 8, "simplifi": 8, "common": 8, "zero": 8, "term": 8, "For": 8, "definit": 8, "write": 8, "mid": 8, "d": 8, "nabla_": 8, "text": 8, "sigma_": 8, "mathbb": 8, "denot": 8, "main": 8, "challeng": 8, "invert": 8, "veri": 8, "computation": 8, "therefor": 8, "ha": 8, "been": 8, "propos": 8, "sever": 8, "describ": 8, "most": 8, "commonli": 8, "approximi": 8, "data": [5, 8], "entir": [], "boldsymbol": 8, "o": 8, "3right": [], "f_": 8, "j_": 8, "cdot": 8, "mathrm": [], "rec": [], "singl": 8, "layer": 8, "neglect": 8, "f": 8, "w": 8, "r": 8, "besid": 8, "benefit": 8, "ensur": 8, "semi": 8, "anoth": 8, "linearli": [7, 8], "rather": [7, 8], "quadrat": [7, 8], "There": 8, "exist": 8, "pytorch": 8, "implement": 8, "jacobina": 8, "product": 8, "backpack": 8, "extend": 8, "autograd": 8, "asdl": 8, "similar": 8, "3": 8, "hat": 8, "all": 8, "becaus": 8, "more": 8, "doe": [5, 8], "repli": 8, "instead": 8, "custom": 8, "furthermor": 8, "allow": 8, "larg": 8, "possibl": 8, "without": 8, "reli": 8, "forward": 8, "pass": 8, "disadvantag": 8, "requir": [5, 8], "user": 8, "onc": 8, "k": 8, "quad": 8, "sim": 8, "dataload": 8, "num_sampl": [7, 8], "cuda": [], "loader": 8, "hessian_calcul": [7, 8], "better": [], "name": [], "approximation2": [], "zeros_lik": [7, 8], "hessiancalcul": [7, 8], "your": [7, 8], "linerzi": 8, "add": 8, "high": 8, "level": 8, "api": 8, "linearized_laplac": [5, 8], "librari": 8, "see": 8, "folder": 8, "sinousoid": 8, "regress": 8, "And": 8, "state": 8, "art": 8, "laplacian": 8, "autoencod": 8, "learn": 8, "stochast": 8, "represent": 8, "metric": 8, "quantif": 8, "retriev": 8, "improv": 8, "epistem": 8, "spatial": 8, "aleator": 8, "hessian_shap": [7, 8], "approximation_accuraci": [7, 8], "exact": [7, 8], "choos": [7, 8], "toi": 8, "problem": 8, "sample_from_norm": 5, "normal": 5, "normal_from_sampl": 5, "emper": 5, "onlinediaglaplac": 5, "union": 5, "list": 5, "onlineblocklaplac": 5, "get": 7, "curvatur": 8, "landscap": 8}, "objects": {"pytorch_laplace": [[4, 0, 1, "", "BCEHessianCalculator"], [5, 0, 1, "", "BlockLaplace"], [4, 0, 1, "", "CEHessianCalculator"], [4, 0, 1, "", "ContrastiveHessianCalculator"], [5, 0, 1, "", "DiagLaplace"], [4, 0, 1, "", "MSEHessianCalculator"], [5, 0, 1, "", "OnlineBlockLaplace"], [5, 0, 1, "", "OnlineDiagLaplace"], [0, 2, 1, "", "log_det_ratio"], [1, 2, 1, "", "log_marginal_likelihood"], [2, 2, 1, "", "optimize_prior_precision"], [3, 2, 1, "", "scatter"]], "pytorch_laplace.BlockLaplace": [[5, 1, 1, "", "laplace"], [5, 1, 1, "", "linearized_laplace"], [5, 1, 1, "", "normal_from_samples"], [5, 1, 1, "", "posterior_scale"], [5, 1, 1, "", "sample_from_normal"]], "pytorch_laplace.DiagLaplace": [[5, 1, 1, "", "laplace"], [5, 1, 1, "", "linearized_laplace"], [5, 1, 1, "", "normal_from_samples"], [5, 1, 1, "", "posterior_scale"], [5, 1, 1, "", "sample_from_normal"]], "pytorch_laplace.OnlineBlockLaplace": [[5, 1, 1, "", "average_hessian_samples"], [5, 1, 1, "", "init_hessian"], [5, 1, 1, "", "scale"]], "pytorch_laplace.OnlineDiagLaplace": [[5, 1, 1, "", "average_hessian_samples"], [5, 1, 1, "", "init_hessian"], [5, 1, 1, "", "scale"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"pytorch_laplac": [0, 1, 2, 3], "log_det_ratio": 0, "log_marginal_likelihood": 1, "optimize_prior_precis": 2, "scatter": 3, "hessian": [4, 8], "estim": 4, "laplac": [5, 7, 8], "sampler": 5, "util": [], "pytorch": 7, "document": 7, "link": 7, "python": 7, "api": 7, "instal": 7, "usag": 7, "learn": 7, "more": 7, "about": 7, "approxim": [7, 8], "introduct": 8, "optim": 6, "what": [], "want": 7, "intuit": 8, "deriv": 8, "sampl": 8, "linear": 8, "get": 8, "start": 8}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"pytorch_laplace.log_det_ratio": [[0, "pytorch-laplace-log-det-ratio"]], "pytorch_laplace.log_marginal_likelihood": [[1, "pytorch-laplace-log-marginal-likelihood"]], "pytorch_laplace.optimize_prior_precision": [[2, "pytorch-laplace-optimize-prior-precision"]], "pytorch_laplace.scatter": [[3, "pytorch-laplace-scatter"]], "Hessian Estimators": [[4, "hessian-estimators"]], "Laplace Samplers": [[5, "laplace-samplers"]], "Optimization": [[6, "optimization"]], "Pytorch-laplace Documentation": [[7, "pytorch-laplace-documentation"]], "Installation": [[7, "installation"]], "Want to learn more about the Laplace approximation?": [[7, "want-to-learn-more-about-the-laplace-approximation"]], "Usage": [[7, "usage"]], "Links:": [[7, "links"]], "Python API": [[7, null]], "Introduction": [[8, "introduction"]], "Intuition": [[8, "intuition"]], "Derivations": [[8, "derivations"]], "Hessian approximations": [[8, "hessian-approximations"]], "Sampling (Laplace)": [[8, "sampling-laplace"]], "Sampling (Linearized Laplace)": [[8, "sampling-linearized-laplace"]], "Getting Started": [[8, "getting-started"]]}, "indexentries": {"log_det_ratio() (in module pytorch_laplace)": [[0, "pytorch_laplace.log_det_ratio"]], "log_marginal_likelihood() (in module pytorch_laplace)": [[1, "pytorch_laplace.log_marginal_likelihood"]], "optimize_prior_precision() (in module pytorch_laplace)": [[2, "pytorch_laplace.optimize_prior_precision"]], "scatter() (in module pytorch_laplace)": [[3, "pytorch_laplace.scatter"]], "bcehessiancalculator (class in pytorch_laplace)": [[4, "pytorch_laplace.BCEHessianCalculator"]], "cehessiancalculator (class in pytorch_laplace)": [[4, "pytorch_laplace.CEHessianCalculator"]], "contrastivehessiancalculator (class in pytorch_laplace)": [[4, "pytorch_laplace.ContrastiveHessianCalculator"]], "msehessiancalculator (class in pytorch_laplace)": [[4, "pytorch_laplace.MSEHessianCalculator"]], "blocklaplace (class in pytorch_laplace)": [[5, "pytorch_laplace.BlockLaplace"]], "diaglaplace (class in pytorch_laplace)": [[5, "pytorch_laplace.DiagLaplace"]], "onlineblocklaplace (class in pytorch_laplace)": [[5, "pytorch_laplace.OnlineBlockLaplace"]], "onlinediaglaplace (class in pytorch_laplace)": [[5, "pytorch_laplace.OnlineDiagLaplace"]], "average_hessian_samples() (pytorch_laplace.onlineblocklaplace method)": [[5, "pytorch_laplace.OnlineBlockLaplace.average_hessian_samples"]], "average_hessian_samples() (pytorch_laplace.onlinediaglaplace method)": [[5, "pytorch_laplace.OnlineDiagLaplace.average_hessian_samples"]], "init_hessian() (pytorch_laplace.onlineblocklaplace method)": [[5, "pytorch_laplace.OnlineBlockLaplace.init_hessian"]], "init_hessian() (pytorch_laplace.onlinediaglaplace method)": [[5, "pytorch_laplace.OnlineDiagLaplace.init_hessian"]], "laplace() (pytorch_laplace.blocklaplace method)": [[5, "pytorch_laplace.BlockLaplace.laplace"]], "laplace() (pytorch_laplace.diaglaplace method)": [[5, "pytorch_laplace.DiagLaplace.laplace"]], "linearized_laplace() (pytorch_laplace.blocklaplace method)": [[5, "pytorch_laplace.BlockLaplace.linearized_laplace"]], "linearized_laplace() (pytorch_laplace.diaglaplace method)": [[5, "pytorch_laplace.DiagLaplace.linearized_laplace"]], "normal_from_samples() (pytorch_laplace.blocklaplace method)": [[5, "pytorch_laplace.BlockLaplace.normal_from_samples"]], "normal_from_samples() (pytorch_laplace.diaglaplace method)": [[5, "pytorch_laplace.DiagLaplace.normal_from_samples"]], "posterior_scale() (pytorch_laplace.blocklaplace method)": [[5, "pytorch_laplace.BlockLaplace.posterior_scale"]], "posterior_scale() (pytorch_laplace.diaglaplace method)": [[5, "pytorch_laplace.DiagLaplace.posterior_scale"]], "sample_from_normal() (pytorch_laplace.blocklaplace method)": [[5, "pytorch_laplace.BlockLaplace.sample_from_normal"]], "sample_from_normal() (pytorch_laplace.diaglaplace method)": [[5, "pytorch_laplace.DiagLaplace.sample_from_normal"]], "scale() (pytorch_laplace.onlineblocklaplace method)": [[5, "pytorch_laplace.OnlineBlockLaplace.scale"]], "scale() (pytorch_laplace.onlinediaglaplace method)": [[5, "pytorch_laplace.OnlineDiagLaplace.scale"]]}})